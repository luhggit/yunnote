<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.heapoverflow.yunnote.mapper.CalendarMapper">
  <resultMap id="BaseResultMap" type="top.heapoverflow.yunnote.entity.Calendar">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="month" jdbcType="INTEGER" property="month" />
    <result column="year" jdbcType="INTEGER" property="year" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="last_update_time" jdbcType="TIMESTAMP" property="lastUpdateTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="top.heapoverflow.yunnote.entity.Calendar">
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <sql id="Base_Column_List">
    id, month, year, create_time, last_update_time
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from calendar
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from calendar
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="top.heapoverflow.yunnote.entity.Calendar" useGeneratedKeys="true" keyProperty="id">
    insert into calendar (id, month, year, 
      create_time, last_update_time, content
      )
    values (#{id,jdbcType=INTEGER}, #{month,jdbcType=INTEGER}, #{year,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{lastUpdateTime,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="top.heapoverflow.yunnote.entity.Calendar" useGeneratedKeys="true" keyProperty="id">
    insert into calendar
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="month != null">
        month,
      </if>
      <if test="year != null">
        year,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="lastUpdateTime != null">
        last_update_time,
      </if>
      <if test="content != null">
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="month != null">
        #{month,jdbcType=INTEGER},
      </if>
      <if test="year != null">
        #{year,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateTime != null">
        #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="top.heapoverflow.yunnote.entity.Calendar">
    update calendar
    <set>
      <if test="month != null">
        month = #{month,jdbcType=INTEGER},
      </if>
      <if test="year != null">
        year = #{year,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateTime != null">
        last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="top.heapoverflow.yunnote.entity.Calendar">
    update calendar
    set month = #{month,jdbcType=INTEGER},
      year = #{year,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>