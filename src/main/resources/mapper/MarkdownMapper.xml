<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.heapoverflow.yunnote.mapper.MarkdownMapper">
  <resultMap id="BaseResultMap" type="top.heapoverflow.yunnote.entity.Markdown">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="last_update_time" jdbcType="TIMESTAMP" property="lastUpdateTime" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="first_class" jdbcType="VARCHAR" property="firstClass" />
    <result column="second_class" jdbcType="VARCHAR" property="secondClass" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="index_id" jdbcType="INTEGER" property="indexId" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="top.heapoverflow.yunnote.entity.MarkdownWithBLOBs">
    <result column="html_content" jdbcType="LONGVARCHAR" property="htmlContent" />
    <result column="md_content" jdbcType="LONGVARCHAR" property="mdContent" />
  </resultMap>
  <sql id="Base_Column_List">
    id, create_time, last_update_time, status, first_class, second_class, title, index_id
  </sql>
  <sql id="Blob_Column_List">
    html_content, md_content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from markdown
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from markdown
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="top.heapoverflow.yunnote.entity.MarkdownWithBLOBs">
    insert into markdown (id, create_time, last_update_time, 
      status, first_class, second_class, 
      title, index_id, html_content, 
      md_content)
    values (#{id,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{lastUpdateTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=VARCHAR}, #{firstClass,jdbcType=VARCHAR}, #{secondClass,jdbcType=VARCHAR}, 
      #{title,jdbcType=VARCHAR}, #{indexId,jdbcType=INTEGER}, #{htmlContent,jdbcType=LONGVARCHAR}, 
      #{mdContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="top.heapoverflow.yunnote.entity.MarkdownWithBLOBs">
    insert into markdown
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="lastUpdateTime != null">
        last_update_time,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="firstClass != null">
        first_class,
      </if>
      <if test="secondClass != null">
        second_class,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="indexId != null">
        index_id,
      </if>
      <if test="htmlContent != null">
        html_content,
      </if>
      <if test="mdContent != null">
        md_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateTime != null">
        #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="firstClass != null">
        #{firstClass,jdbcType=VARCHAR},
      </if>
      <if test="secondClass != null">
        #{secondClass,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="indexId != null">
        #{indexId,jdbcType=INTEGER},
      </if>
      <if test="htmlContent != null">
        #{htmlContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="mdContent != null">
        #{mdContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="top.heapoverflow.yunnote.entity.MarkdownWithBLOBs">
    update markdown
    <set>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateTime != null">
        last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="firstClass != null">
        first_class = #{firstClass,jdbcType=VARCHAR},
      </if>
      <if test="secondClass != null">
        second_class = #{secondClass,jdbcType=VARCHAR},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="indexId != null">
        index_id = #{indexId,jdbcType=INTEGER},
      </if>
      <if test="htmlContent != null">
        html_content = #{htmlContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="mdContent != null">
        md_content = #{mdContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="top.heapoverflow.yunnote.entity.MarkdownWithBLOBs">
    update markdown
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR},
      first_class = #{firstClass,jdbcType=VARCHAR},
      second_class = #{secondClass,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      index_id = #{indexId,jdbcType=INTEGER},
      html_content = #{htmlContent,jdbcType=LONGVARCHAR},
      md_content = #{mdContent,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="top.heapoverflow.yunnote.entity.Markdown">
    update markdown
    set create_time = #{createTime,jdbcType=TIMESTAMP},
      last_update_time = #{lastUpdateTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR},
      first_class = #{firstClass,jdbcType=VARCHAR},
      second_class = #{secondClass,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      index_id = #{indexId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByIndexId" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from markdown
    where index_id = #{indexId,jdbcType=INTEGER}
  </select>
</mapper>